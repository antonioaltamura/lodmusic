############## Info artist CON AGGREGATION ##############

PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT  ?name ?bDate ?abstract ?image  ?origin ?caption
(GROUP_CONCAT(DISTINCT ?artistRelated; separator="(.)(.)") AS ?artistRelateds)
(GROUP_CONCAT(DISTINCT ?bandRelated; separator="(.)(.)") AS ?bandRelateds)

WHERE
{
  <${req.query.uri}> a umbelrc:MusicalPerformer;
    foaf:name ?name;
  dbo:abstract ?abstract;
  dbo:birthDate ?bDate.
 OPTIONAL{<${req.query.uri}> dbo:thumbnail ?image} .
 OPTIONAL{<${req.query.uri}> dbo:associatedBand ?bandRelated} .
OPTIONAL{<${req.query.uri}> dbo:associatedMusicalArtist ?artistRelated} .
 OPTIONAL{<${req.query.uri}> dbp:caption ?caption} .
 OPTIONAL{<${req.query.uri}> dbp:origin ?origin} .
}group by ?name  ?bDate ?abstract ?image ?origin ?caption



############## Info Artist +  Band (JOIN) CON AGGREGATION ##############

PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT  ?name ?bDate ?abstract ?image  ?origin ?caption
(GROUP_CONCAT(DISTINCT ?artistRelated; separator="(.)(.)") AS ?artistRelateds)
(GROUP_CONCAT(DISTINCT ?bandRelated; separator="(.)(.)") AS ?bandRelateds)
(GROUP_CONCAT(DISTINCT ?band; separator="(.)(.)") AS ?bands)

WHERE
{
  <${req.query.uri}> a umbelrc:MusicalPerformer;
    foaf:name ?name;
  dbo:abstract ?abstract;
  dbo:birthDate ?bDate.
 OPTIONAL{?band dbp:currentMembers <${req.query.uri}>} .
 OPTIONAL{<${req.query.uri}> dbo:thumbnail ?image} .
 OPTIONAL{<${req.query.uri}> dbo:associatedBand ?bandRelated} .
OPTIONAL{<${req.query.uri}> dbo:associatedMusicalArtist ?artistRelated} .
 OPTIONAL{<${req.query.uri}> dbp:caption ?caption} .
 OPTIONAL{<${req.query.uri}> dbp:origin ?origin} .
}group by ?name  ?bDate ?abstract ?image ?origin ?caption


}group by ?name  ?bDate ?abstract ?image ?origin ?caption


############## Band di un artista ##############


PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?band
WHERE{
?band a dbo:Band;
             dbp:currentMembers $param.

}

############## Info Band ##############

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT  ?website ?abstract ?genre ?image ?member ?artistRelated ?bandRelated ?origin ?caption
WHERE{
$param a dbo:Band ;
       foaf:name ?name;
      dbo:abstract ?abstract ;
      dbp:currentMembers ?member .
  OPTIONAL{$param dbo:genre ?genre } .
  OPTIONAL{$param dbp:website ?website} .
  OPTIONAL{$param dbo:associatedBand ?bandRelated} .
  OPTIONAL{$param dbo:associatedMusicalArtist ?artistRelated} .
  OPTIONAL{ $param dbp:caption ?caption} .
  OPTIONAL{$param dbp:origin ?origin} .
  OPTIONAL{$param dbo:image ?image} .

}

------------CON AGGREGATION-----------
SELECT ?name
?image
?abstract
(GROUP_CONCAT(DISTINCT ?website; separator="(.)(.)") AS ?websites)
(GROUP_CONCAT(DISTINCT ?genre; separator="(.)(.)") AS ?genres)
(GROUP_CONCAT(DISTINCT ?member; separator="(.)(.)") AS ?members)
(GROUP_CONCAT(DISTINCT ?artistRelated; separator="(.)(.)") AS ?artistRelateds)
(GROUP_CONCAT(DISTINCT ?bandRelated; separator="(.)(.)") AS ?bandRelateds)
?origin
?caption
WHERE{
VALUES ?s {$param}
  ?s a dbo:Band ;
       foaf:name ?name;
      dbo:abstract ?abstract .
  OPTIONAL{?s dbo:genre ?genre } .
  OPTIONAL{?s dbp:website ?website} .
  OPTIONAL{?s dbo:associatedBand ?bandRelated} .
  OPTIONAL{?s dbo:associatedMusicalArtist ?artistRelated} .
  OPTIONAL{?s dbp:caption ?caption} .
  OPTIONAL{?s dbp:origin ?origin} .
  OPTIONAL{?s dbo:image ?image} .
FILTER LANGMATCHES(LANG(?abstract ), "en")
} group by ?name  ?abstract ?image ?origin ?caption

############## Info Album ##############

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?name ?abstract ?recordLabel ?releaseDate ?genre ?artist
WHERE{
$param a schema:MusicAlbum;
      foaf:name ?name;
      dbo:abstract ?abstract;
      dbo:recordLabel ?recordLabel;
      dbo:releaseDate ?date;
        dbo:artist ?band.
  OPTIONAL{$param dbo:genre ?genre}.
}

------------CON AGGREGATION-----------

  SELECT
  ?name
  ?abstract
  ?releaseDate
(GROUP_CONCAT(DISTINCT ?genre; separator="(.)(.)") AS ?genres)
(GROUP_CONCAT(DISTINCT ?recordLabel; separator="(.)(.)") AS ?recordLabels)
(GROUP_CONCAT(DISTINCT ?artist; separator="(.)(.)") AS ?artists)
WHERE{
<${req.query.uri}> a schema:MusicAlbum;
      foaf:name ?name;
      dbo:abstract ?abstract;
      dbo:recordLabel ?recordLabel;
      dbo:releaseDate ?date;
        dbo:artist ?band.
  OPTIONAL{<${req.query.uri}> dbo:genre ?genre}.
} group by ?name  ?abstract ?releaseDate


############## Autocompletamento ricerca globale ($param) ##############

PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?name 
WHERE
{  
  ?entity foaf:name ?name.
  FILTER regex(?name, "^$param"). 
}


##############Info Track ##############


PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?name ?abstract ?releaseDate ?artist ?album ?recordLabel
     WHERE
{
  
  {$param a umbelrc:MusicSingle} UNION {$param a dbo:MusicalWork}.

  $param  foaf:name ?name;
      dbo:abstract ?abstract;
      dbo:releaseDate ?date;
  { $param dbo:musicalArtist [ a umbelrc:MusicalPerformer;
                                foaf:name ?artist;]}
  UNION  {$param dbo:musicalArtist [ a dbo:Band;
  foaf:name ?artist;]}      
  FILTER(lang(?abstract) = "en").
      OPTIONAL{?track dbo:album ?album}.
      OPTIONAL{?track dbo:recordLabel ?recordLabel}.

}    



############## Info track CON AGGREGATION ###############

PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?name ?abstract ?releaseDate 
(GROUP_CONCAT(DISTINCT ?recordLabel; separator="(.)(.)") AS ?recordLabels)
(GROUP_CONCAT(DISTINCT ?artist; separator="(.)(.)") AS ?artists)
(GROUP_CONCAT(DISTINCT ?album; separator="(.)(.)") AS ?albums)
     WHERE
{
  
  {<${req.query.uri}>  a umbelrc:MusicSingle} UNION {<${req.query.uri}>  a dbo:MusicalWork}.

  <${req.query.uri}>   foaf:name ?name;
      dbo:abstract ?abstract;
      dbo:releaseDate ?date;
  
  { <${req.query.uri}>  dbo:musicalArtist [ a umbelrc:MusicalPerformer;
                                foaf:name ?artist;]}
  UNION  {<${req.query.uri}> dbo:musicalArtist [ a dbo:Band; 
  foaf:name ?artist;]} 


  FILTER(lang(?abstract) = "en").
      OPTIONAL{<${req.query.uri}>  dbo:album ?album}.
      OPTIONAL{<${req.query.uri}>  dbo:recordLabel ?recordLabel}.
}   




 ############## Ricerca di tutti i generi musicali memorizzati ############## -> (1)

 #COMMENTI 
?genre è la URI da passare come $param2
?genresLiteral è la stringa da mostrare all'utente
#FINE COMMENTI

PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?genre
(strafter(str(?genre),'http://dbpedia.org/resource/') as ?genreLiteral)
WHERE{
  [] dbo:genre ?genre.
}




 ############## Ricerca di tutte le etichette discografiche memorizzate ############## -> (2)

 #COMMENTI
?recordLabel è la URI da passare come $param2
?recordLabelLiteral è la stringa da mostrare all'utente
#FINE COMMENTI

PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?recordLabel
(strafter(str(?recordLabel),'http://dbpedia.org/resource/') as ?recordLabelLiteral)
WHERE{
  [] dbo:recordLabel ?recordLabel.
}



 ############## Ricerca di tutte le band (con autocompletamento) ############## -> (3)
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?name 
WHERE
{  
  ?band a dbo:Band;
  foaf:name ?name.
  FILTER regex(?name, "^$"). 
}

 ############## Ricerca di tutti gli artisti (con autocompletamento) ############## -> (4)
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist ?name 
WHERE
{  
  ?artist a umbelrc:MusicalPerformer;
  foaf:name ?name.
  FILTER regex(?name, "^"). 
}

 ############## Ricerca di tutti gli album (con autocompletamento) ############## -> (5)
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?name ?album 
WHERE{  
  ?album foaf:name ?name.
  ?album a schema:MusicAlbum.
       FILTER regex(?name, "^"). 

}


 ############## Ricerca di tutte le band e di tutti gli artisti (con autocompletamento) ############## -> (6)
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?name 
WHERE
{  
  {?entity a umbelrc:MusicalPerformer} UNION   {?entity a dbo:Band}
   ?entity foaf:name ?name.
  FILTER regex(?name, "^"). 
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                           QUERY DI INSERIMENTO DATI 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ############## Inserimento Genere per una Band o un Artista o un Album ##############

 #COMMENTI
$param1 = URI_band/artist/album
$param2 = URI_genre  vedi -> (1)
#FINE COMMENTI

 INSERT DATA
{
$param1  dbo:genre $param2.
}                                            


 ############## Inserimento Etichetta Discografica per una Track o per un Album ##############

 #COMMENTI
$param1 = URI_album/track
$param2 = URI_recordLabel vedi -> (2)
#FINE COMMENTI

 INSERT DATA
{
$param1  dbo:recordLabel $param2.
} 



 ############## Inserimento Artista ##############

 #COMMENTI
 Può essere tutto null tranne $name
$uriArtist : Lo dovete costruire come una stringa fatta così: "<http://dbpedia.org/resource/" + trim($name). 
$name : nome inserito dall'utente.
$abstract: inserito dall'utente
$date: data in formato aaaa-mm-dd
$uriBandRelated: uri della band selezionata tra quelle presenti vedi -> (3)
$uriArtistRelated: uri dell'artista selezionato tra quelli presenti vedi -> (4)
$caption: caption inserito dall'utente
$city: inserità dall'utente
$uriBand: uri della band selezionata tra quelle presenti  vedi -> (3) 
#FINE COMMENTI


PREFIX schema: <http://schema.org/>
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbp: <http://dbpedia.org/property/>

INSERT DATA{
  
$uriArtist a umbelrc:MusicalPerformer;
          foaf:name $name;
          dbo:abstract $abstract;
          dbo:birthDate $date^^xsd:date;
            dbo:associatedBand $uriBandRelated;
            dbo:associatedMusicalArtist $uriArtistRelated;
            dbp:caption $caption;
            dbp:origin $city.
  $uriBand dbp:currentMember $uriArtist.          
}



 ############## Inserimento Band ##############

 #COMMENTI
 Può essere tutto null tranne $name, $uriMember

$uriBand : La dovete costruire come una stringa fatta così: "<http://dbpedia.org/resource/" + trim($name). 
$name : nome inserito dall'utente.
$abstract: inserito dall'utente
$genre : genere scelto dall'utente dalla lista dei generi già presenti vedi -> (1)
$uriBandRelated: uri della band selezionata tra quelle presenti vedi -> (3)
$uriArtistRelated: uri dell'artista selezionato tra quelli presenti vedi -> (4)
$caption: caption inserito dall'utente
$city: inserità dall'utente
$uriBand: uri della band selezionata tra quelle presenti  vedi -> (3) 
$uriMember: uri dell'artista selezionato tra quelli presenti vedi -> (4)
#FINE COMMENTI

PREFIX schema: <http://schema.org/>
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbp: <http://dbpedia.org/property/>

INSERT DATA{
  
$uriBAND a dbo:Band;
          foaf:name $name;
          dbp:website $website;
          dbo:abstract $abstract;
          dbo:genre $genre;
          dbo:associatedBand $uriBandRelated;
          dbo:associatedMusicalArtist $uriArtistRelated;
          dbp:caption $caption;
          dbp:origin $city.
      dbp:currentMembers $uriMember.        
}



 ############## Inserimento Track ##############

 #COMMENTI
Può essere tutto null tranne $name, $date
$uriTrack : Lo dovete costruire come una stringa fatta così: "<http://dbpedia.org/resource/" + trim($name). 
$name : nome della canzone inserita dall'utente
$abstract : abstract inserito dall'utente
$uriAlbum : uri scelta dall'utente dalla lista mostrata tramite la query vedi -> (5)
$recordLabel : uri dell'etichetta discografica vedi -> (2)
$date: data in formato aaaa-mm-dd
$uriArtist : artista  o band della canzone vedi query -> (6)
#FINE COMMENTI

PREFIX schema: <http://schema.org/>
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbp: <http://dbpedia.org/property/>

INSERT DATA{
  
$uriTrack a dbo:MusicalWork;
      foaf:name $name;
      dbo:abstract $abstract;
      dbo:album $uriAlbum;
      dbo:recordLabel $recordLabel;
      dbo:releaseDate $date^^xsd:date;
      dbo:musicalArtist $uriArtist.
              
}



 ############## Inserimento Band ##############

 #COMMENTI
Può essere tutto null tranne $name e $date
$uriAlbum : Lo dovete costruire come una stringa fatta così: "<http://dbpedia.org/resource/" + trim($name). 
$name : nome inserito dall'utente
$abstract : stringa inserita dall'utente
$recordLabel: uri ottenuta mediante la query di ricerca delle label vedi -> (2)
$date: data in formato aaaa-mm-dd
$genre : genere scelto dall'utente dalla lista dei generi già presenti vedi -> (1)
$uriArtist: artista o band dell'album  con query vedi -> (6)

#FINE COMMENTI

PREFIX schema: <http://schema.org/>
PREFIX umbelrc: <http://umbel.org/umbel/rc/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbp: <http://dbpedia.org/property/>

INSERT DATA{
  
$uriAlbum a schema:MusicAlbum;
          foaf:name $name;
          dbo:abstract $abstract;
          dbo:recordLabel $recordLabel;
      dbo:releaseDate $date^^xsd:date;
      dbo:genre $genre;
      dbo:artist $uriArtist.
}